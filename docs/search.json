[{"path":"https://www.pashakhin.org/topicl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 topicl authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://www.pashakhin.org/topicl/articles/find_stable_topics-jaccard.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Find stable topics in STM with Jaccard similarity","text":"Koltsov, S., Pashakhin, S., & Dokuka, S. (2018). Full-Cycle Methodology News Topic Modeling User Feedback Research. S. Staab, O. Koltsova, & D. . Ignatov (Eds.), Social Informatics (Vol. 11185, pp. 308–321). Springer International Publishing. https://doi.org/10.1007/978-3-030-01129-1_19","code":""},{"path":"https://www.pashakhin.org/topicl/articles/find_stable_topics-jaccard.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"Find stable topics in STM with Jaccard similarity","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sequoia 15.2 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Europe/Berlin #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4       furrr_0.3.1       future_1.34.0     tictoc_1.2.1      #> [5] stm_1.3.7         topicl_0.0.0.9000 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       xfun_0.45          bslib_0.7.0        ggplot2_3.5.1      #>  [5] htmlwidgets_1.6.4  ggrepel_0.9.5      lattice_0.22-6     vctrs_0.6.5        #>  [9] tools_4.4.2        generics_0.1.3     parallel_4.4.2     tibble_3.2.1       #> [13] highr_0.11         janeaustenr_1.0.0  pkgconfig_2.0.3    tokenizers_0.3.0   #> [17] Matrix_1.7-1       data.table_1.16.4  RColorBrewer_1.1-3 desc_1.4.3         #> [21] lifecycle_1.0.4    compiler_4.4.2     farver_2.1.2       stringr_1.5.1      #> [25] textshaping_0.4.0  munsell_0.5.1      ggforce_0.4.2      graphlayouts_1.2.1 #> [29] codetools_0.2-20   SnowballC_0.7.1    htmltools_0.5.8.1  sass_0.4.9         #> [33] yaml_2.3.8         tidytext_0.4.2     pillar_1.10.1      pkgdown_2.1.1      #> [37] jquerylib_0.1.4    tidyr_1.3.1        MASS_7.3-61        cachem_1.1.0       #> [41] viridis_0.6.5      parallelly_1.39.0  tidyselect_1.2.1   digest_0.6.37      #> [45] stringi_1.8.4      reshape2_1.4.4     purrr_1.0.2        listenv_0.9.1      #> [49] labeling_0.4.3     polyclip_1.10-7    fastmap_1.2.0      grid_4.4.2         #> [53] colorspace_2.1-1   cli_3.6.3          magrittr_2.0.3     ggraph_2.2.1       #> [57] tidygraph_1.3.1    utf8_1.2.4         withr_3.0.2        scales_1.3.0       #> [61] rmarkdown_2.27     globals_0.16.3     igraph_2.0.3       gridExtra_2.3      #> [65] ragg_1.3.2         memoise_2.0.1      evaluate_0.24.0    knitr_1.47         #> [69] viridisLite_0.4.2  rlang_1.1.4        Rcpp_1.0.14        glue_1.8.0         #> [73] tweenr_2.0.3       jsonlite_1.8.8     R6_2.5.1           plyr_1.8.9         #> [77] systemfonts_1.1.0  fs_1.6.4"},{"path":"https://www.pashakhin.org/topicl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sergei Pashakhin. Author, maintainer.","code":""},{"path":"https://www.pashakhin.org/topicl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pashakhin S (2025). topicl: Tools Finding Stable Topics Analyzing . R package version 0.0.0.9000, https://www.pashakhin.org/topicl/.","code":"@Manual{,   title = {topicl: Tools for Finding Stable Topics and Analyzing them},   author = {Sergei Pashakhin},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://www.pashakhin.org/topicl/}, }"},{"path":"https://www.pashakhin.org/topicl/index.html","id":"topicl","dir":"","previous_headings":"","what":"Tools for Finding Stable Topics and Analyzing them","title":"Tools for Finding Stable Topics and Analyzing them","text":"goal topicl provide tools identifying stable (reproducible) topics analysis.","code":""},{"path":"https://www.pashakhin.org/topicl/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Finding Stable Topics and Analyzing them","text":"can install development version topicl GitHub :","code":"# install.packages(\"pak\") pak::pak(\"paskn/topicl\")"},{"path":"https://www.pashakhin.org/topicl/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Finding Stable Topics and Analyzing them","text":"See vignette details. basic example shows solve common problem:","code":"library(topicl) library(stm) library(dplyr)  modA <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9934,             verbose = F)              modB <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9576,             verbose = F)              compare_solutions(list(modA, modB), depth=500) |>    arrange(desc(jaccard)) |>    head() #> # A tibble: 6 × 5 #>   model_id_A topic_id_A model_id_B topic_id_B jaccard #>   <chr>      <chr>      <chr>      <chr>        <dbl> #> 1 mod_1      topic_4    mod_2      topic_24     0.161 #> 2 mod_1      topic_7    mod_2      topic_6      0.152 #> 3 mod_1      topic_4    mod_2      topic_3      0.144 #> 4 mod_1      topic_24   mod_2      topic_24     0.143 #> 5 mod_1      topic_3    mod_2      topic_5      0.142 #> 6 mod_1      topic_4    mod_2      topic_9      0.142"},{"path":"https://www.pashakhin.org/topicl/reference/ask_palmetto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get topic coherence from Palmetto remote or local — ask_palmetto","title":"Get topic coherence from Palmetto remote or local — ask_palmetto","text":"Get topic coherence Palmetto remote local","code":""},{"path":"https://www.pashakhin.org/topicl/reference/ask_palmetto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get topic coherence from Palmetto remote or local — ask_palmetto","text":"","code":"ask_palmetto(solution, depth = \"full\", coherence = \"npmi\", backend = \"web\")"},{"path":"https://www.pashakhin.org/topicl/reference/ask_palmetto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get topic coherence from Palmetto remote or local — ask_palmetto","text":"solution wide tibble column contains top-N terms. depth number top terms use use coherence estimation. backend = \"web\", number less 3 10. coherence name coherence metric. Valid names: \"ca\", \"cp\", \"cv\", \"npmi\", \"uci\", \"umass\". Default npmi. backend Path Palmetto either \"web\" string URL. Example: http://localhost:7777/service/.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/ask_palmetto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get topic coherence from Palmetto remote or local — ask_palmetto","text":"wide tibble requested coherence scores.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/ask_palmetto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get topic coherence from Palmetto remote or local — ask_palmetto","text":"","code":"df1 <- tibble::tibble(col1 = c(\"apple\", \"banana\", \"cherry\"), col2 = c(\"dog\", \"cat\", \"mouse\"))  ask_palmetto(df1) #> # A tibble: 1 × 2 #>    col1  col2 #>   <dbl> <dbl> #> 1 0.263 0.286"},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"primary internal function calculating Jaccard similarity given pair topics.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"","code":"calcjaccard(topic1, topic2)"},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"topic1 vector terms representative topic. topic2 vector terms representative another topic.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"value Jaccard similarity pair topics (numerical).","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"","code":"topicA <- c(\"tax\", \"money\", \"million\", \"financi\", \"govern\", \"spend\", \"billion\") topicB <- c(\"iraq\", \"war\", \"militari\", \"iraqi\", \"troop\", \"forc\", \"will\")  calcjaccard(topicA, topicB) #> [1] 0"},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"Pair-Wisely Compare Topic Solutions Jaccard","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"","code":"compare_solutions(models, depth = 100)"},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"models list object STM models. Must least 2 models. depth number top terms use comparison. Default top 100 terms.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"tibble model--model topic--topic Jaccard similarity.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"","code":"library(stm) #> stm v1.3.7 successfully loaded. See ?stm for help.  #>  Papers, resources, and other materials at structuraltopicmodel.com library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  modA <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9934)  #> Beginning Random Initialization  #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -8.185)  #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached              modB <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9576)  #> Beginning Random Initialization  #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -8.163)  #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached              compare_solutions(list(modA, modB), depth=100) |>  arrange(desc(jaccard)) |>  head() #> # A tibble: 6 × 5 #>   model_id_A topic_id_A model_id_B topic_id_B jaccard #>   <chr>      <chr>      <chr>      <chr>        <dbl> #> 1 mod_1      topic_8    mod_2      topic_23    0.111  #> 2 mod_1      topic_24   mod_2      topic_20    0.105  #> 3 mod_1      topic_24   mod_2      topic_23    0.0989 #> 4 mod_1      topic_25   mod_2      topic_6     0.0989 #> 5 mod_1      topic_10   mod_2      topic_20    0.0929 #> 6 mod_1      topic_18   mod_2      topic_15    0.0929"},{"path":"https://www.pashakhin.org/topicl/reference/filter_topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize solution comparisons — filter_topics","title":"Summarize solution comparisons — filter_topics","text":"Summarize solution comparisons","code":""},{"path":"https://www.pashakhin.org/topicl/reference/filter_topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize solution comparisons — filter_topics","text":"","code":"filter_topics(res, sim_threshold, n_sols)"},{"path":"https://www.pashakhin.org/topicl/reference/filter_topics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize solution comparisons — filter_topics","text":"res output compare_solutions() sim_threshold level Jaccard similarity filtering stable topics. n_sols number fits decide topic stable.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/filter_topics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize solution comparisons — filter_topics","text":"tibble counts topic persistence across fits.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Terms for a Topic — get_topN_terms","title":"Get Top Terms for a Topic — get_topN_terms","text":"Returns top-N terms topic ranked probability.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Terms for a Topic — get_topN_terms","text":"","code":"get_topN_terms(mod, topic_n, top_n_terms)"},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Top Terms for a Topic — get_topN_terms","text":"mod object STM LDA model. topic_n topic ID (numeric). top_n_terms number terms return.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Top Terms for a Topic — get_topN_terms","text":"tibble ranked list terms.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Top Terms for a Topic — get_topN_terms","text":"","code":"library(stm)  mod <- stm(poliblog5k.docs,             poliblog5k.voc, K=25,            prevalence=~rating,             data=poliblog5k.meta,            max.em.its=2,             init.type=\"Spectral\")  #> Beginning Spectral Initialization  #> \t Calculating the gram matrix... #> \t Finding anchor words... #>  \t......................... #> \t Recovering initialization... #>  \t.......................... #> Initialization complete. #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -7.020)  #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached   get_topN_terms(mod, 1, 100) #> # A tibble: 100 × 3 #>    topic term       beta #>    <int> <chr>     <dbl> #>  1     1 legisl  0.0483  #>  2     1 bill    0.0303  #>  3     1 vote    0.0252  #>  4     1 senat   0.0212  #>  5     1 hous    0.0125  #>  6     1 will    0.0115  #>  7     1 pass    0.00950 #>  8     1 fisa    0.00703 #>  9     1 support 0.00659 #> 10     1 protect 0.00658 #> # ℹ 90 more rows"},{"path":"https://www.pashakhin.org/topicl/reference/top_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Terms for a Topic — top_terms","title":"Get Top Terms for a Topic — top_terms","text":"Returns top-N terms topic ranked probability.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/top_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Terms for a Topic — top_terms","text":"","code":"top_terms(mod, topic_id, n_terms)"},{"path":"https://www.pashakhin.org/topicl/reference/top_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Top Terms for a Topic — top_terms","text":"mod object STM LDA model. topic_id topic ID (numeric). n_terms number terms return.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/top_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Top Terms for a Topic — top_terms","text":"tibble ranked list terms.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/top_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Top Terms for a Topic — top_terms","text":"","code":"library(stm)  mod <- stm(poliblog5k.docs,             poliblog5k.voc, K=25,            prevalence=~rating,             data=poliblog5k.meta,            max.em.its=2,             init.type=\"Spectral\")  #> Beginning Spectral Initialization  #> \t Calculating the gram matrix... #> \t Finding anchor words... #>  \t......................... #> \t Recovering initialization... #>  \t.......................... #> Initialization complete. #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -7.020)  #> .................................................................................................... #> Completed E-Step (1 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached   top_terms(mod, 1, 100) #> # A tibble: 100 × 3 #>    topic term       beta #>    <int> <chr>     <dbl> #>  1     1 legisl  0.0483  #>  2     1 bill    0.0303  #>  3     1 vote    0.0252  #>  4     1 senat   0.0212  #>  5     1 hous    0.0125  #>  6     1 will    0.0115  #>  7     1 pass    0.00950 #>  8     1 fisa    0.00703 #>  9     1 support 0.00659 #> 10     1 protect 0.00658 #> # ℹ 90 more rows"},{"path":"https://www.pashakhin.org/topicl/reference/viz_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize topic similarities with a network — viz_comparisons","title":"Visualize topic similarities with a network — viz_comparisons","text":"Visualize topic similarities network","code":""},{"path":"https://www.pashakhin.org/topicl/reference/viz_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize topic similarities with a network — viz_comparisons","text":"","code":"viz_comparisons(res, sim_threshold)"},{"path":"https://www.pashakhin.org/topicl/reference/viz_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize topic similarities with a network — viz_comparisons","text":"res output compare_solutions() sim_threshold Jaccard similarity threshold filtering.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/viz_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize topic similarities with a network — viz_comparisons","text":"ggraph plot.","code":""}]
