[{"path":"https://www.pashakhin.org/topicl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 topicl authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://www.pashakhin.org/topicl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sergei Pashakhin. Author, maintainer.","code":""},{"path":"https://www.pashakhin.org/topicl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pashakhin S (2025). topicl: Tools Finding Stable Topics Analyzing . R package version 0.0.0.9000, https://www.pashakhin.org/topicl/.","code":"@Manual{,   title = {topicl: Tools for Finding Stable Topics and Analyzing them},   author = {Sergei Pashakhin},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://www.pashakhin.org/topicl/}, }"},{"path":"https://www.pashakhin.org/topicl/index.html","id":"topicl","dir":"","previous_headings":"","what":"Tools for Finding Stable Topics and Analyzing them","title":"Tools for Finding Stable Topics and Analyzing them","text":"goal topicl provide tools identifying stable (reproducible) topics analysis.","code":""},{"path":"https://www.pashakhin.org/topicl/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Finding Stable Topics and Analyzing them","text":"can install development version topicl GitHub :","code":"# install.packages(\"pak\") pak::pak(\"paskn/topicl\")"},{"path":"https://www.pashakhin.org/topicl/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Finding Stable Topics and Analyzing them","text":"basic example shows solve common problem:","code":"library(topicl) library(stm) library(dplyr)  modA <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9934,             verbose = F)              modB <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9576,             verbose = F)              compare_solutions(list(modA, modB), depth=500) |>    arrange(desc(jaccard)) |>    head() #> [1] \"Done\" #>   model_id_1 model_id_2 topic_id_1 topic_id_2   jaccard #> 1      mod_1      mod_2    topic_4   topic_24 0.1614402 #> 2      mod_1      mod_2    topic_4   topic_25 0.1614402 #> 3      mod_1      mod_2    topic_5    topic_1 0.1614402 #> 4      mod_1      mod_2    topic_5    topic_2 0.1614402 #> 5      mod_1      mod_2    topic_5    topic_3 0.1614402 #> 6      mod_1      mod_2    topic_5    topic_4 0.1614402"},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"primary internal function calculating Jaccard similarity given pair topics.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"","code":"calcjaccard(topic1, topic2)"},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"topic1 vector terms representative topic. topic2 vector terms representative another topic.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"value Jaccard similarity pair topics (numerical).","code":""},{"path":"https://www.pashakhin.org/topicl/reference/calcjaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Jaccard Similarity for a Pair of Topics — calcjaccard","text":"","code":"topicA <- c(\"tax\", \"money\", \"million\", \"financi\", \"govern\", \"spend\", \"billion\") topicB <- c(\"iraq\", \"war\", \"militari\", \"iraqi\", \"troop\", \"forc\", \"will\")  calcjaccard(topicA, topicB) #> [1] 0"},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"Pair-Wisely Compare Topic Solutions Jaccard","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"","code":"compare_solutions(models, depth = 100)"},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"models list object STM models. Must least 2 models. depth number top terms use comparison. Default top 100 terms.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"tibble model--model topic--topic Jaccard similarity.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/compare_solutions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pair-Wisely Compare Topic Solutions with Jaccard — compare_solutions","text":"","code":"library(stm) #> stm v1.3.7 successfully loaded. See ?stm for help.  #>  Papers, resources, and other materials at structuraltopicmodel.com library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  modA <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9934)  #> Beginning Random Initialization  #> .................................................................................................... #> Completed E-Step (3 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -8.185)  #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached              modB <- stm(poliblog5k.docs,              poliblog5k.voc, K=25,             prevalence=~rating,              data=poliblog5k.meta,             max.em.its=2,              init.type=\"Random\",             seed = 9576)  #> Beginning Random Initialization  #> .................................................................................................... #> Completed E-Step (3 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -8.163)  #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached              compare_solutions(list(modA, modB), depth=100) |>  arrange(desc(jaccard)) |>  head() #> [1] \"Done\" #>   model_id_1 model_id_2 topic_id_1 topic_id_2   jaccard #> 1      mod_1      mod_2    topic_8   topic_23 0.1111111 #> 2      mod_1      mod_2    topic_8   topic_24 0.1111111 #> 3      mod_1      mod_2    topic_8   topic_25 0.1111111 #> 4      mod_1      mod_2    topic_9    topic_1 0.1111111 #> 5      mod_1      mod_2    topic_9    topic_2 0.1111111 #> 6      mod_1      mod_2    topic_9    topic_3 0.1111111"},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Terms for a Topic — get_topN_terms","title":"Get Top Terms for a Topic — get_topN_terms","text":"Returns top-N terms topic ranked probability.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Terms for a Topic — get_topN_terms","text":"","code":"get_topN_terms(mod, topic_n, top_n_terms)"},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Top Terms for a Topic — get_topN_terms","text":"mod object STM LDA model. topic_n topic ID (numeric). top_n_terms number terms return.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Top Terms for a Topic — get_topN_terms","text":"tibble ranked list terms.","code":""},{"path":"https://www.pashakhin.org/topicl/reference/get_topN_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Top Terms for a Topic — get_topN_terms","text":"","code":"library(stm)  mod <- stm(poliblog5k.docs,             poliblog5k.voc, K=25,            prevalence=~rating,             data=poliblog5k.meta,            max.em.its=2,             init.type=\"Spectral\")  #> Beginning Spectral Initialization  #> \t Calculating the gram matrix... #> \t Finding anchor words... #>  \t......................... #> \t Recovering initialization... #>  \t.......................... #> Initialization complete. #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Completing Iteration 1 (approx. per word bound = -7.020)  #> .................................................................................................... #> Completed E-Step (2 seconds).  #> Completed M-Step.  #> Model Terminated Before Convergence Reached   get_topN_terms(mod, 1, 100) #> # A tibble: 100 × 3 #>    topic term       beta #>    <int> <chr>     <dbl> #>  1     1 legisl  0.0483  #>  2     1 bill    0.0303  #>  3     1 vote    0.0252  #>  4     1 senat   0.0212  #>  5     1 hous    0.0125  #>  6     1 will    0.0115  #>  7     1 pass    0.00950 #>  8     1 fisa    0.00703 #>  9     1 support 0.00659 #> 10     1 protect 0.00658 #> # ℹ 90 more rows"}]
